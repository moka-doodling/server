<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    파일명 : MemberMapper.xml
    설  명 : 사용자

    == 개정이력 ========================================
     수정일       수정자    수정내용
    ========== ======= ================================
    2024.06.17 김지수   최초 생성
-->
<mapper namespace="com.doodling.member.mapper.MemberMapper">

    <select id="findByUsername" resultType="Member"
            parameterType="String">
        <![CDATA[
        SELECT member_id memberId, username, password, selected_cnt selectedCnt, roles
        FROM member
        WHERE username = #{username} AND deletedate IS NULL
        ]]>
	</select>

    <select id="findByMemberId" resultType="Member"
            parameterType="Integer">
        <![CDATA[
        SELECT member_id memberId, username, password, selected_cnt selectedCnt, roles
        FROM member
        WHERE member_id = #{memberId} AND deletedate IS NULL
        ]]>
	</select>

    <select id="countTotal" resultType="Long">
        <![CDATA[
        SELECT count(*)
        FROM member
        ]]>
	</select>

    <insert id="insert" parameterType="Member">
        <selectKey keyProperty="memberId" resultType="Integer" order="AFTER">
            <![CDATA[
            SELECT seq_member.currval AS memberId FROM dual
            ]]>
        </selectKey>
        <![CDATA[
            INSERT INTO member(member_id, username, password, roles)
            VALUES (seq_member.nextval, #{username}, #{password}, #{roles})
        ]]>
    </insert>

    <!-- member Id와 filtering 조건으로 삭제되지 않은 내 모든 제출물 조회 -->
    <select id="findSubmissionsByMemberId" resultType="MySubmission">
        <![CDATA[
        SELECT s.submission_id AS submissionId,
               s.relay_id AS relayId,
               s.member_id AS memberId,
               s.is_selected AS isSelected,
               (SELECT COUNT(*) FROM recommend l WHERE l.submission_id = s.submission_id) AS recommendCnt,
               s.regdate AS regdate,
               TO_CHAR(s.sketch) AS sketch,
               r.title AS title,
               s.week
        FROM submission s
                 JOIN relay r ON s.relay_id = r.relay_id
        WHERE r.is_end = ${filtering}
          AND s.member_id = #{memberId}
          AND s.deletedate IS NULL
        ORDER BY s.regdate DESC
        ]]>
    </select>

    <!-- member Id와 filtering 조건으로 삭제되지 않은 내 제출물 페이징 처리해 조회 -->
    <select id="findSubmissionsByMemberIdPaging" parameterType="Integer" resultType="MySubmission">
        <![CDATA[
        SELECT s1.submissionId,
               s1.relayId,
               s1.memberId,
               s1.isSelected,
               s1.recommendCnt,
               s1.regdate,
               s1.sketch,
               s1.title,
               s1.week
        FROM (
                 SELECT s.submission_id AS submissionId,
                        s.relay_id AS relayId,
                        s.member_id AS memberId,
                        s.is_selected AS isSelected,
                        (SELECT COUNT(*) FROM recommend l WHERE l.submission_id = s.submission_id) AS recommendCnt,
                        s.regdate AS regdate,
                        TO_CHAR(s.sketch) AS sketch,
                        r.title AS title,
                        s.week,
                        ROW_NUMBER() OVER (ORDER BY s.regdate DESC) AS row_num
                 FROM submission s
                          JOIN relay r ON s.relay_id = r.relay_id
                 WHERE r.is_end = #{filtering}
                   AND s.member_id = #{memberId}
                    AND s.deletedate IS NULL
             ) s1
        WHERE s1.row_num > ((#{cri.pageNum} - 1) * #{cri.pageSize})
          AND s1.row_num <= (#{cri.pageNum} * #{cri.pageSize})
        ]]>
    </select>

    <!-- member Id로 삭제 -->
    <update id="deleteUserByMemberId" parameterType="Integer">
        <![CDATA[
        UPDATE member
        SET deletedate = SYSDATE
        WHERE member_id = #{memberId}
        ]]>
    </update>

    <update id="changePassword" parameterType="Member">
        <![CDATA[
        UPDATE member
        SET password = #{password}
        WHERE member_id = #{memberId}
        ]]>
    </update>

    <update id="updateSelectedCnt" parameterType="java.lang.Integer">
        <![CDATA[
            update member
            set selected_cnt = selected_cnt + 1
            where member_id = #{memberId}
        ]]>
    </update>

    <update id="cancelSelectedCnt" parameterType="java.lang.Integer">
        <![CDATA[
            update member
            set selected_cnt = selected_cnt - 1
            where member_id = #{memberId}
        ]]>
    </update>

    <select id="countMembersByUsername" parameterType="String" resultType="Integer">
        <![CDATA[
            SELECT COUNT(username)
            FROM member
            WHERE username = #{username}
        ]]>
    </select>

    <!-- 진행 중인 공모전 중 내가 제출한, filtering 조건에 맞는 제출물 개수 조회 -->
    <select id="countTotalMySubmission" resultType="Integer">
        <![CDATA[
        SELECT COUNT(*)
        FROM submission s
                 JOIN relay r ON s.relay_id = r.relay_id
        WHERE r.is_end = ${filtering} AND s.member_id = #{memberId}
        ]]>
    </select>
</mapper>
